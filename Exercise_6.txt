/*
Write a trigger for the Product table to ensure the 
list price can never be raised more than 15 Percent in a single change. 
Modify the above trigger to execute its check code only if the ListPrice column is updated 
(Use AdventureWorks Database).
*/

CREATE TRIGGER tri_ProductListPrice
ON Production.Product
AFTER UPDATE
AS
BEGIN
    -- Check if the ListPrice column was updated
    IF UPDATE(ListPrice)
    BEGIN
        -- Check if the updated ListPrice exceeds the maximum allowed increase
        IF EXISTS (
            SELECT *
            FROM inserted i
            JOIN deleted d ON i.ProductID = d.ProductID
            WHERE i.ListPrice > d.ListPrice * 1.15
        )
        BEGIN
            -- Rollback the transaction and raise an error message
            RAISERROR('ListPrice cannot be raised more than 15 percent in a single change.', 16, 1)
            ROLLBACK TRANSACTION
            RETURN
        END
    END
END

BEGIN TRANSACTION
UPDATE Production.Product SET ListPrice=133.34 WHERE ProductID=514
COMMIT TRANSACTION

--SELECT ListPrice, ProductID from Production.Product;
SELECT ListPrice FROM Production.Product WHERE ProductID=514

BEGIN TRANSACTION
UPDATE Production.Product SET ListPrice=134 WHERE ProductID=514
COMMIT TRANSACTION

SELECT ListPrice FROM Production.Product WHERE ProductID=514
